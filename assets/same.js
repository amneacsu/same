!function(n){function e(r){if(t[r])return t[r].exports;var o=t[r]={exports:{},id:r,loaded:!1};return n[r].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var t={};return e.m=n,e.c=t,e.p="/",e(0)}([function(n,e,t){"use strict";var r=t(1),o=t(2),c=t(3),u=function f(){(0,r.render)((0,c.gameToCanvas)(o.game)),window.requestAnimationFrame(f)},i=function(n){return function(e){return(0,o.handle)((0,r.cellOffset)(e),n)}};r.canvas.addEventListener("click",i(o.click)),r.canvas.addEventListener("click",i(o.move)),r.canvas.addEventListener("mousemove",i(o.move)),window.addEventListener("load",u)},function(n,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var t=e.canvas=document.getElementById("same"),r=e.context=t.getContext("2d"),o=["#DDD","#8C3","#FD0","#F0E","#4AF","#F04"],c=2*Math.PI,u=48,i=function(){return r.clearRect(0,0,t.width,t.height)},f=function(n){a(24,24,20,n);var e=r.getImageData(0,0,u,u);return i(),e},a=function(n,e,t,o){r.fillStyle=o,r.beginPath(),r.arc(n,e,t,0,c,!1),r.closePath(),r.fill()},s=o.map(f),l=function(n){r.fillStyle="#432",r.fillText(n,5,610)},d=function(n){r.putImageData(s[n.m?0:n.c],n.x*u,n.y*u)};e.cellOffset=function(n){return{x:~~(n.offsetX/u),y:~~(n.offsetY/u)}},e.render=function(n){i(),n.cells.forEach(d),l(n.score)};r.font="24px sans-serif"},function(n,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});for(var t=[],r={current:0,bonus:0},o=(e.game={grid:t,score:r},11),c=12,u=function(n){return n.length*(n.length-1)},i=function(n){return~~(Math.random()*n)},f=function(n){return n},a=function(n){return function(e){return Object.keys(n).every(function(t){return e[t]===n[t]})}},s=function(n,e){return n.find(a(e))},l=function(n){return t.filter(a(n))},d=function(n){return n.filter(f)},v=function(n){return n.x+=1},x=function(n){return n.y+=1},h=function(n){return!s(t,{x:n.x,y:n.y+1})},m=function(n){return n.m=!0},y=function(n){return n.m=!1},g=function(n){return t.splice(t.indexOf(n),1)},p=function(n){return l({x:n})},E=function(n){return l({y:n})},b=function(n,e){var t=i(5)+1,r=!1;return{x:n,y:e,c:t,matched:r}},O=function(n){for(;n.y<c-1&&h(n);)x(n)},D=function(){for(var n=o-1;n>=1;n--)if(!p(n).length)for(var e=n-1;e>=0;e--)p(e).forEach(v)},P=function(){for(var n=c-1;n>=0;n--)E(n).forEach(O)},_=(e.click=function(n){var e=k(n);e.length>=2&&(r.current+=u(e),e.forEach(g),P(),D())},e.move=function(n){t.forEach(y);var e=k(n);e.length>=2&&(e.forEach(m),r.bonus=u(e))},e.handle=function(n,e){var r=s(t,n);r&&e(r)},function(n){var e=l({c:n.c}),t=[s(e,{x:n.x,y:n.y+1}),s(e,{x:n.x,y:n.y-1}),s(e,{x:n.x+1,y:n.y}),s(e,{x:n.x-1,y:n.y})];return d(t)}),k=function M(n){var e=arguments.length<=1||void 0===arguments[1]?[]:arguments[1];return e.push(n),_(n).forEach(function(n){-1===e.indexOf(n)&&M(n,e)}),e},w=0;c>w;w++)for(var F=0;o>F;F++)t.push(b(F,w))},function(n,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var t=function(n){return n};e.gameToCanvas=function(n){var e=n.grid,r=n.score;return{cells:e.map(t),score:"Score: "+r.current+(r.bonus>0?" + "+r.bonus:"")}}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc2FtZS5qcyIsIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgOWNlYWU3YjQ5MDA4MjZhOGFjMGUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NhbWUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NhbnZhcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvZ2FtZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMveC5qcyJdLCJuYW1lcyI6WyJtb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiaW5zdGFsbGVkTW9kdWxlcyIsImV4cG9ydHMiLCJtb2R1bGUiLCJpZCIsImxvYWRlZCIsImNhbGwiLCJtIiwiYyIsInAiLCJfY2FudmFzIiwiX2dhbWUiLCJfeCIsInRpY2siLCJyZW5kZXIiLCJnYW1lVG9DYW52YXMiLCJnYW1lIiwid2luZG93IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwibW91c2UiLCJhY3Rpb24iLCJlIiwiaGFuZGxlIiwiY2VsbE9mZnNldCIsImNhbnZhcyIsImFkZEV2ZW50TGlzdGVuZXIiLCJjbGljayIsIm1vdmUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImNvbnRleHQiLCJnZXRDb250ZXh0IiwiZmlsbENvbG9ycyIsInR3b1BJIiwiTWF0aCIsIlBJIiwiY2VsbFNpemUiLCJlcmFzZSIsImNsZWFyUmVjdCIsIndpZHRoIiwiaGVpZ2h0IiwibWFrZVNwcml0ZSIsImNvbG9yIiwiY2lyY2xlIiwic3ByaXRlIiwiZ2V0SW1hZ2VEYXRhIiwieCIsInkiLCJyYWRpdXMiLCJmaWxsU3R5bGUiLCJiZWdpblBhdGgiLCJhcmMiLCJjbG9zZVBhdGgiLCJmaWxsIiwic3ByaXRlcyIsIm1hcCIsImRyYXdTY29yZSIsInNjb3JlIiwiZmlsbFRleHQiLCJkcmF3Q2VsbCIsImNlbGwiLCJwdXRJbWFnZURhdGEiLCJvZmZzZXRYIiwib2Zmc2V0WSIsInN0YXRlIiwiY2VsbHMiLCJmb3JFYWNoIiwiZm9udCIsImdyaWQiLCJjdXJyZW50IiwiYm9udXMiLCJwb2ludHMiLCJtYXRjaGVkIiwibGVuZ3RoIiwicmFuZCIsImIiLCJyYW5kb20iLCJzZWxmIiwiaXRlbSIsImhhc1Byb3BzIiwicHJvcHMiLCJrZXlzIiwiZXZlcnkiLCJwcm9wIiwiZmluZCIsImxpc3QiLCJmaWx0ZXIiLCJjb21wYWN0IiwibW92ZVJpZ2h0IiwibW92ZURvd24iLCJzcGFjZUJlbG93IiwibWF0Y2giLCJ1bm1hdGNoIiwicmVtb3ZlIiwic3BsaWNlIiwiaW5kZXhPZiIsImNvbHVtbiIsInJvdyIsInJhbmRvbUNlbGwiLCJmYWxsIiwiY29sbGFwc2VDb2x1bW5zIiwieDIiLCJhcHBseUdyYXZpdHkiLCJuZWlnaGJvdXJzIiwibWF0Y2hDZWxscyIsImNvb3JkcyIsIm4iLCJhcmd1bWVudHMiLCJ1bmRlZmluZWQiLCJwdXNoIl0sIm1hcHBpbmdzIjoiQ0FBUyxTQUFVQSxHQ0luQixRQUFBQyxHQUFBQyxHQUdBLEdBQUFDLEVBQUFELEdBQ0EsTUFBQUMsR0FBQUQsR0FBQUUsT0FHQSxJQUFBQyxHQUFBRixFQUFBRCxJQUNBRSxXQUNBRSxHQUFBSixFQUNBSyxRQUFBLEVBVUEsT0FOQVAsR0FBQUUsR0FBQU0sS0FBQUgsRUFBQUQsUUFBQUMsSUFBQUQsUUFBQUgsR0FHQUksRUFBQUUsUUFBQSxFQUdBRixFQUFBRCxRQXZCQSxHQUFBRCxLQXFDQSxPQVRBRixHQUFBUSxFQUFBVCxFQUdBQyxFQUFBUyxFQUFBUCxFQUdBRixFQUFBVSxFQUFBLElBR0FWLEVBQUEsS0RNTSxTQUFTSSxFQUFRRCxFQUFTSCxHQUUvQixZQUVBLElBQUlXLEdBQVVYLEVBQW9CLEdBRTlCWSxFQUFRWixFQUFvQixHQUU1QmEsRUFBS2IsRUFBb0IsR0VoRHhCYyxFQUFPLFFBQVBBLE1BQ0osRUFBQUgsRUFBQUksU0FBTyxFQUFBRixFQUFBRyxjQUFBSixFQUFBSyxPQUNQQyxPQUFPQyxzQkFBc0JMLElBR3pCTSxFQUFRLFNB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N0I0QixPQUFPLEdLaFNWLElBQU1nQyxHQUFXLFNBQUFDLEdBQ2YsTUFBT0EsR0FHSTdELEdBQUFhLGFBQWUsU0FBQ0MsR0xtUzFCLEdLbFNLdUQsR0FBZ0J2RCxFQUFoQnVELEtBQU1YLEVBQVU1QyxFQUFWNEMsS0FFWixRQUNFUSxNQUFPRyxFQUFLYixJQUFJSSxHQUNoQkYsTUFBTyxVQUFVQSxFQUFNWSxTQUFhWixFQUFNYSxNQUFRLEVBQWQsTUFBd0JiLEVBQU1hLE1BQVUiLCJmaWxlIjoic2FtZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKioqKiovIChmdW5jdGlvbihtb2R1bGVzKSB7IC8vIHdlYnBhY2tCb290c3RyYXBcbi8qKioqKiovIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbi8qKioqKiovIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbi8qKioqKiovIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSlcbi8qKioqKiovIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuLyoqKioqKi8gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbi8qKioqKiovIFx0XHRcdGV4cG9ydHM6IHt9LFxuLyoqKioqKi8gXHRcdFx0aWQ6IG1vZHVsZUlkLFxuLyoqKioqKi8gXHRcdFx0bG9hZGVkOiBmYWxzZVxuLyoqKioqKi8gXHRcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuLyoqKioqKi8gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4vKioqKioqLyBcdFx0bW9kdWxlLmxvYWRlZCA9IHRydWU7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4vKioqKioqLyBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuLyoqKioqKi8gXHR9XG4vKioqKioqL1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIi9cIjtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuLyoqKioqKi8gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcbi8qKioqKiovIH0pXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKi8gKFtcbi8qIDAgKi9cbi8qKiovIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cdCd1c2Ugc3RyaWN0Jztcblx0XG5cdHZhciBfY2FudmFzID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcblx0XG5cdHZhciBfZ2FtZSA9IF9fd2VicGFja19yZXF1aXJlX18oMik7XG5cdFxuXHR2YXIgX3ggPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xuXHRcblx0dmFyIHRpY2sgPSBmdW5jdGlvbiB0aWNrKCkge1xuXHQgICgwLCBfY2FudmFzLnJlbmRlcikoKDAsIF94LmdhbWVUb0NhbnZhcykoX2dhbWUuZ2FtZSkpO1xuXHQgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGljayk7XG5cdH07XG5cdFxuXHR2YXIgbW91c2UgPSBmdW5jdGlvbiBtb3VzZShhY3Rpb24pIHtcblx0ICByZXR1cm4gZnVuY3Rpb24gKGUpIHtcblx0ICAgIHJldHVybiAoMCwgX2dhbWUuaGFuZGxlKSgoMCwgX2NhbnZhcy5jZWxsT2Zmc2V0KShlKSwgYWN0aW9uKTtcblx0ICB9O1xuXHR9O1xuXHRcblx0X2NhbnZhcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBtb3VzZShfZ2FtZS5jbGljaykpO1xuXHRfY2FudmFzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG1vdXNlKF9nYW1lLm1vdmUpKTtcblx0X2NhbnZhcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgbW91c2UoX2dhbWUubW92ZSkpO1xuXHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIHRpY2spO1xuXG4vKioqLyB9LFxuLyogMSAqL1xuLyoqKi8gZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cblx0J3VzZSBzdHJpY3QnO1xuXHRcblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG5cdCAgdmFsdWU6IHRydWVcblx0fSk7XG5cdHZhciBjYW52YXMgPSBleHBvcnRzLmNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzYW1lJyk7XG5cdHZhciBjb250ZXh0ID0gZXhwb3J0cy5jb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XG5cdFxuXHR2YXIgZmlsbENvbG9ycyA9IFsnI0RERCcsICcjOEMzJywgJyNGRDAnLCAnI0YwRScsICcjNEFGJywgJyNGMDQnXTtcblx0dmFyIHR3b1BJID0gMiAqIE1hdGguUEk7XG5cdHZhciBjZWxsU2l6ZSA9IDQ4O1xuXHRcblx0dmFyIGVyYXNlID0gZnVuY3Rpb24gZXJhc2UoKSB7XG5cdCAgcmV0dXJuIGNvbnRleHQuY2xlYXJSZWN0KDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7XG5cdH07XG5cdFxuXHR2YXIgbWFrZVNwcml0ZSA9IGZ1bmN0aW9uIG1ha2VTcHJpdGUoY29sb3IpIHtcblx0ICBjaXJjbGUoMjQsIDI0LCAyMCwgY29sb3IpO1xuXHQgIHZhciBzcHJpdGUgPSBjb250ZXh0LmdldEltYWdlRGF0YSgwLCAwLCBjZWxsU2l6ZSwgY2VsbFNpemUpO1xuXHQgIGVyYXNlKCk7XG5cdCAgcmV0dXJuIHNwcml0ZTtcblx0fTtcblx0XG5cdHZhciBjaXJjbGUgPSBmdW5jdGlvbiBjaXJjbGUoeCwgeSwgcmFkaXVzLCBjb2xvcikge1xuXHQgIGNvbnRleHQuZmlsbFN0eWxlID0gY29sb3I7XG5cdCAgY29udGV4dC5iZWdpblBhdGgoKTtcblx0ICBjb250ZXh0LmFyYyh4LCB5LCByYWRpdXMsIDAsIHR3b1BJLCBmYWxzZSk7XG5cdCAgY29udGV4dC5jbG9zZVBhdGgoKTtcblx0ICBjb250ZXh0LmZpbGwoKTtcblx0fTtcblx0XG5cdHZhciBzcHJpdGVzID0gZmlsbENvbG9ycy5tYXAobWFrZVNwcml0ZSk7XG5cdFxuXHR2YXIgZHJhd1Njb3JlID0gZnVuY3Rpb24gZHJhd1Njb3JlKHNjb3JlKSB7XG5cdCAgY29udGV4dC5maWxsU3R5bGUgPSAnIzQzMic7XG5cdCAgY29udGV4dC5maWxsVGV4dChzY29yZSwgNSwgNjEwKTtcblx0fTtcblx0XG5cdHZhciBkcmF3Q2VsbCA9IGZ1bmN0aW9uIGRyYXdDZWxsKGNlbGwpIHtcblx0ICBjb250ZXh0LnB1dEltYWdlRGF0YShzcHJpdGVzW2NlbGwubSA/IDAgOiBjZWxsLmNdLCBjZWxsLnggKiBjZWxsU2l6ZSwgY2VsbC55ICogY2VsbFNpemUpO1xuXHR9O1xuXHRcblx0dmFyIGNlbGxPZmZzZXQgPSBleHBvcnRzLmNlbGxPZmZzZXQgPSBmdW5jdGlvbiBjZWxsT2Zmc2V0KGUpIHtcblx0ICByZXR1cm4ge1xuXHQgICAgeDogfiB+KGUub2Zmc2V0WCAvIGNlbGxTaXplKSxcblx0ICAgIHk6IH4gfihlLm9mZnNldFkgLyBjZWxsU2l6ZSlcblx0ICB9O1xuXHR9O1xuXHRcblx0dmFyIHJlbmRlciA9IGV4cG9ydHMucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKHN0YXRlKSB7XG5cdCAgZXJhc2UoKTtcblx0ICBzdGF0ZS5jZWxscy5mb3JFYWNoKGRyYXdDZWxsKTtcblx0ICBkcmF3U2NvcmUoc3RhdGUuc2NvcmUpO1xuXHR9O1xuXHRcblx0Y29udGV4dC5mb250ID0gJzI0cHggc2Fucy1zZXJpZic7XG5cbi8qKiovIH0sXG4vKiAyICovXG4vKioqLyBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuXHRcInVzZSBzdHJpY3RcIjtcblx0XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuXHQgIHZhbHVlOiB0cnVlXG5cdH0pO1xuXHR2YXIgZ3JpZCA9IFtdO1xuXHR2YXIgc2NvcmUgPSB7IGN1cnJlbnQ6IDAsIGJvbnVzOiAwIH07XG5cdFxuXHR2YXIgZ2FtZSA9IGV4cG9ydHMuZ2FtZSA9IHsgZ3JpZDogZ3JpZCwgc2NvcmU6IHNjb3JlIH07XG5cdFxuXHR2YXIgd2lkdGggPSAxMTtcblx0dmFyIGhlaWdodCA9IDEyO1xuXHRcblx0dmFyIHBvaW50cyA9IGZ1bmN0aW9uIHBvaW50cyhtYXRjaGVkKSB7XG5cdCAgcmV0dXJuIG1hdGNoZWQubGVuZ3RoICogKG1hdGNoZWQubGVuZ3RoIC0gMSk7XG5cdH07XG5cdHZhciByYW5kID0gZnVuY3Rpb24gcmFuZChiKSB7XG5cdCAgcmV0dXJuIH4gfihNYXRoLnJhbmRvbSgpICogYik7XG5cdH07XG5cdHZhciBzZWxmID0gZnVuY3Rpb24gc2VsZihpdGVtKSB7XG5cdCAgcmV0dXJuIGl0ZW07XG5cdH07XG5cdFxuXHR2YXIgaGFzUHJvcHMgPSBmdW5jdGlvbiBoYXNQcm9wcyhwcm9wcykge1xuXHQgIHJldHVybiBmdW5jdGlvbiAoY2VsbCkge1xuXHQgICAgcmV0dXJuIE9iamVjdC5rZXlzKHByb3BzKS5ldmVyeShmdW5jdGlvbiAocHJvcCkge1xuXHQgICAgICByZXR1cm4gY2VsbFtwcm9wXSA9PT0gcHJvcHNbcHJvcF07XG5cdCAgICB9KTtcblx0ICB9O1xuXHR9O1xuXHR2YXIgZmluZCA9IGZ1bmN0aW9uIGZpbmQobGlzdCwgcHJvcHMpIHtcblx0ICByZXR1cm4gbGlzdC5maW5kKGhhc1Byb3BzKHByb3BzKSk7XG5cdH07XG5cdHZhciBmaWx0ZXIgPSBmdW5jdGlvbiBmaWx0ZXIocHJvcHMpIHtcblx0ICByZXR1cm4gZ3JpZC5maWx0ZXIoaGFzUHJvcHMocHJvcHMpKTtcblx0fTtcblx0dmFyIGNvbXBhY3QgPSBmdW5jdGlvbiBjb21wYWN0KGxpc3QpIHtcblx0ICByZXR1cm4gbGlzdC5maWx0ZXIoc2VsZik7XG5cdH07XG5cdFxuXHR2YXIgbW92ZVJpZ2h0ID0gZnVuY3Rpb24gbW92ZVJpZ2h0KGNlbGwpIHtcblx0ICByZXR1cm4gY2VsbC54ICs9IDE7XG5cdH07XG5cdHZhciBtb3ZlRG93biA9IGZ1bmN0aW9uIG1vdmVEb3duKGNlbGwpIHtcblx0ICByZXR1cm4gY2VsbC55ICs9IDE7XG5cdH07XG5cdHZhciBzcGFjZUJlbG93ID0gZnVuY3Rpb24gc3BhY2VCZWxvdyhjZWxsKSB7XG5cdCAgcmV0dXJuICFmaW5kKGdyaWQsIHsgeDogY2VsbC54LCB5OiBjZWxsLnkgKyAxIH0pO1xuXHR9O1xuXHR2YXIgbWF0Y2ggPSBmdW5jdGlvbiBtYXRjaChjZWxsKSB7XG5cdCAgcmV0dXJuIGNlbGwubSA9IHRydWU7XG5cdH07XG5cdHZhciB1bm1hdGNoID0gZnVuY3Rpb24gdW5tYXRjaChjZWxsKSB7XG5cdCAgcmV0dXJuIGNlbGwubSA9IGZhbHNlO1xuXHR9O1xuXHR2YXIgcmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKGNlbGwpIHtcblx0ICByZXR1cm4gZ3JpZC5zcGxpY2UoZ3JpZC5pbmRleE9mKGNlbGwpLCAxKTtcblx0fTtcblx0XG5cdHZhciBjb2x1bW4gPSBmdW5jdGlvbiBjb2x1bW4oeCkge1xuXHQgIHJldHVybiBmaWx0ZXIoeyB4OiB4IH0pO1xuXHR9O1xuXHR2YXIgcm93ID0gZnVuY3Rpb24gcm93KHkpIHtcblx0ICByZXR1cm4gZmlsdGVyKHsgeTogeSB9KTtcblx0fTtcblx0XG5cdHZhciByYW5kb21DZWxsID0gZnVuY3Rpb24gcmFuZG9tQ2VsbCh4LCB5KSB7XG5cdCAgdmFyIGMgPSByYW5kKDUpICsgMSxcblx0ICAgICAgbWF0Y2hlZCA9IGZhbHNlO1xuXHQgIHJldHVybiB7IHg6IHgsIHk6IHksIGM6IGMsIG1hdGNoZWQ6IG1hdGNoZWQgfTtcblx0fTtcblx0XG5cdHZhciBmYWxsID0gZnVuY3Rpb24gZmFsbChjZWxsKSB7XG5cdCAgd2hpbGUgKGNlbGwueSA8IGhlaWdodCAtIDEgJiYgc3BhY2VCZWxvdyhjZWxsKSkge1xuXHQgICAgbW92ZURvd24oY2VsbCk7XG5cdCAgfVxuXHR9O1xuXHRcblx0dmFyIGNvbGxhcHNlQ29sdW1ucyA9IGZ1bmN0aW9uIGNvbGxhcHNlQ29sdW1ucygpIHtcblx0ICBmb3IgKHZhciB4ID0gd2lkdGggLSAxOyB4ID49IDE7IHgtLSkge1xuXHQgICAgaWYgKGNvbHVtbih4KS5sZW5ndGgpIGNvbnRpbnVlO1xuXHRcblx0ICAgIGZvciAodmFyIHgyID0geCAtIDE7IHgyID49IDA7IHgyLS0pIHtcblx0ICAgICAgY29sdW1uKHgyKS5mb3JFYWNoKG1vdmVSaWdodCk7XG5cdCAgICB9XG5cdCAgfVxuXHR9O1xuXHRcblx0dmFyIGFwcGx5R3Jhdml0eSA9IGZ1bmN0aW9uIGFwcGx5R3Jhdml0eSgpIHtcblx0ICBmb3IgKHZhciB5ID0gaGVpZ2h0IC0gMTsgeSA+PSAwOyB5LS0pIHtcblx0ICAgIHJvdyh5KS5mb3JFYWNoKGZhbGwpO1xuXHQgIH1cblx0fTtcblx0XG5cdHZhciBjbGljayA9IGV4cG9ydHMuY2xpY2sgPSBmdW5jdGlvbiBjbGljayhjZWxsKSB7XG5cdCAgdmFyIG1hdGNoZWQgPSBtYXRjaENlbGxzKGNlbGwpO1xuXHRcblx0ICBpZiAobWF0Y2hlZC5sZW5ndGggPj0gMikge1xuXHQgICAgc2NvcmUuY3VycmVudCArPSBwb2ludHMobWF0Y2hlZCk7XG5cdCAgICBtYXRjaGVkLmZvckVhY2gocmVtb3ZlKTtcblx0ICAgIGFwcGx5R3Jhdml0eSgpO1xuXHQgICAgY29sbGFwc2VDb2x1bW5zKCk7XG5cdCAgfVxuXHR9O1xuXHRcblx0dmFyIG1vdmUgPSBleHBvcnRzLm1vdmUgPSBmdW5jdGlvbiBtb3ZlKGNlbGwpIHtcblx0ICBncmlkLmZvckVhY2godW5tYXRjaCk7XG5cdCAgdmFyIG1hdGNoZWQgPSBtYXRjaENlbGxzKGNlbGwpO1xuXHRcblx0ICBpZiAobWF0Y2hlZC5sZW5ndGggPj0gMikge1xuXHQgICAgbWF0Y2hlZC5mb3JFYWNoKG1hdGNoKTtcblx0ICAgIHNjb3JlLmJvbnVzID0gcG9pbnRzKG1hdGNoZWQpO1xuXHQgIH1cblx0fTtcblx0XG5cdHZhciBoYW5kbGUgPSBleHBvcnRzLmhhbmRsZSA9IGZ1bmN0aW9uIGhhbmRsZShjb29yZHMsIGFjdGlvbikge1xuXHQgIHZhciBjZWxsID0gZmluZChncmlkLCBjb29yZHMpO1xuXHQgIGNlbGwgJiYgYWN0aW9uKGNlbGwpO1xuXHR9O1xuXHRcblx0dmFyIG5laWdoYm91cnMgPSBmdW5jdGlvbiBuZWlnaGJvdXJzKGNlbGwpIHtcblx0ICB2YXIgY2VsbHMgPSBmaWx0ZXIoeyBjOiBjZWxsLmMgfSk7XG5cdFxuXHQgIHZhciBuID0gW2ZpbmQoY2VsbHMsIHsgeDogY2VsbC54LCB5OiBjZWxsLnkgKyAxIH0pLCBmaW5kKGNlbGxzLCB7IHg6IGNlbGwueCwgeTogY2VsbC55IC0gMSB9KSwgZmluZChjZWxscywgeyB4OiBjZWxsLnggKyAxLCB5OiBjZWxsLnkgfSksIGZpbmQoY2VsbHMsIHsgeDogY2VsbC54IC0gMSwgeTogY2VsbC55IH0pXTtcblx0XG5cdCAgcmV0dXJuIGNvbXBhY3Qobik7XG5cdH07XG5cdFxuXHR2YXIgbWF0Y2hDZWxscyA9IGZ1bmN0aW9uIG1hdGNoQ2VsbHMoY2VsbCkge1xuXHQgIHZhciBsaXN0ID0gYXJndW1lbnRzLmxlbmd0aCA8PSAxIHx8IGFyZ3VtZW50c1sxXSA9PT0gdW5kZWZpbmVkID8gW10gOiBhcmd1bWVudHNbMV07XG5cdFxuXHQgIGxpc3QucHVzaChjZWxsKTtcblx0XG5cdCAgbmVpZ2hib3VycyhjZWxsKS5mb3JFYWNoKGZ1bmN0aW9uIChjKSB7XG5cdCAgICBpZiAobGlzdC5pbmRleE9mKGMpID09PSAtMSkgbWF0Y2hDZWxscyhjLCBsaXN0KTtcblx0ICB9KTtcblx0XG5cdCAgcmV0dXJuIGxpc3Q7XG5cdH07XG5cdFxuXHRmb3IgKHZhciB5ID0gMDsgeSA8IGhlaWdodDsgeSsrKSB7XG5cdCAgZm9yICh2YXIgeCA9IDA7IHggPCB3aWR0aDsgeCsrKSB7XG5cdCAgICBncmlkLnB1c2gocmFuZG9tQ2VsbCh4LCB5KSk7XG5cdCAgfVxuXHR9XG5cbi8qKiovIH0sXG4vKiAzICovXG4vKioqLyBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuXHQndXNlIHN0cmljdCc7XG5cdFxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcblx0ICB2YWx1ZTogdHJ1ZVxuXHR9KTtcblx0dmFyIGRyYXdDZWxsID0gZnVuY3Rpb24gZHJhd0NlbGwoY2VsbCkge1xuXHQgIHJldHVybiBjZWxsO1xuXHR9O1xuXHRcblx0dmFyIGdhbWVUb0NhbnZhcyA9IGV4cG9ydHMuZ2FtZVRvQ2FudmFzID0gZnVuY3Rpb24gZ2FtZVRvQ2FudmFzKGdhbWUpIHtcblx0ICB2YXIgZ3JpZCA9IGdhbWUuZ3JpZDtcblx0ICB2YXIgc2NvcmUgPSBnYW1lLnNjb3JlO1xuXHRcblx0XG5cdCAgcmV0dXJuIHtcblx0ICAgIGNlbGxzOiBncmlkLm1hcChkcmF3Q2VsbCksXG5cdCAgICBzY29yZTogJ1Njb3JlOiAnICsgc2NvcmUuY3VycmVudCArIChzY29yZS5ib251cyA+IDAgPyAnICsgJyArIHNjb3JlLmJvbnVzIDogJycpXG5cdCAgfTtcblx0fTtcblxuLyoqKi8gfVxuLyoqKioqKi8gXSk7XG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogc2FtZS5qc1xuICoqLyIsIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKVxuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuXG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRleHBvcnRzOiB7fSxcbiBcdFx0XHRpZDogbW9kdWxlSWQsXG4gXHRcdFx0bG9hZGVkOiBmYWxzZVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sb2FkZWQgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIi9cIjtcblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHdlYnBhY2svYm9vdHN0cmFwIDljZWFlN2I0OTAwODI2YThhYzBlXG4gKiovIiwiaW1wb3J0IHsgY2FudmFzLCByZW5kZXIsIGNlbGxPZmZzZXQgfSBmcm9tICcuL2NhbnZhcyc7XG5pbXBvcnQgeyBoYW5kbGUsIGNsaWNrLCBtb3ZlLCBnYW1lIH0gZnJvbSAnLi9nYW1lJztcbmltcG9ydCB7IGdhbWVUb0NhbnZhcyB9IGZyb20gJy4veCc7XG5cbmNvbnN0IHRpY2sgPSAoKSA9PiB7XG4gIHJlbmRlcihnYW1lVG9DYW52YXMoZ2FtZSkpO1xuICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRpY2spO1xufVxuXG5jb25zdCBtb3VzZSA9IGFjdGlvbiA9PiBlID0+IGhhbmRsZShjZWxsT2Zmc2V0KGUpLCBhY3Rpb24pO1xuXG5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBtb3VzZShjbGljaykpO1xuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgbW91c2UobW92ZSkpO1xuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIG1vdXNlKG1vdmUpKTtcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgdGljayk7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zYW1lLmpzXG4gKiovIiwiZXhwb3J0IGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzYW1lJyk7XG5leHBvcnQgY29uc3QgY29udGV4dCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuXG5jb25zdCBmaWxsQ29sb3JzID0gWycjREREJywgJyM4QzMnLCAnI0ZEMCcsICcjRjBFJywgJyM0QUYnLCAnI0YwNCddO1xuY29uc3QgdHdvUEkgPSAyICogTWF0aC5QSTtcbmNvbnN0IGNlbGxTaXplID0gNDg7XG5cbmNvbnN0IGVyYXNlID0gKCkgPT4gY29udGV4dC5jbGVhclJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcblxuY29uc3QgbWFrZVNwcml0ZSA9IGNvbG9yID0+IHtcbiAgY2lyY2xlKDI0LCAyNCwgMjAsIGNvbG9yKTtcbiAgbGV0IHNwcml0ZSA9IGNvbnRleHQuZ2V0SW1hZ2VEYXRhKDAsIDAsIGNlbGxTaXplLCBjZWxsU2l6ZSk7XG4gIGVyYXNlKCk7XG4gIHJldHVybiBzcHJpdGU7XG59XG5cbmNvbnN0IGNpcmNsZSA9ICh4LCB5LCByYWRpdXMsIGNvbG9yKSA9PiB7XG4gIGNvbnRleHQuZmlsbFN0eWxlID0gY29sb3I7XG4gIGNvbnRleHQuYmVnaW5QYXRoKCk7XG4gIGNvbnRleHQuYXJjKHgsIHksIHJhZGl1cywgMCwgdHdvUEksIGZhbHNlKTtcbiAgY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgY29udGV4dC5maWxsKCk7XG59XG5cbmNvbnN0IHNwcml0ZXMgPSBmaWxsQ29sb3JzLm1hcChtYWtlU3ByaXRlKTtcblxuY29uc3QgZHJhd1Njb3JlID0gc2NvcmUgPT4ge1xuICBjb250ZXh0LmZpbGxTdHlsZSA9ICcjNDMyJztcbiAgY29udGV4dC5maWxsVGV4dChzY29yZSwgNSwgNjEwKTtcbn1cblxuY29uc3QgZHJhd0NlbGwgPSBjZWxsID0+IHtcbiAgY29udGV4dC5wdXRJbWFnZURhdGEoc3ByaXRlc1tjZWxsLm0gPyAwIDogY2VsbC5jXSwgY2VsbC54ICogY2VsbFNpemUsIGNlbGwueSAqIGNlbGxTaXplKTtcbn07XG5cbmV4cG9ydCBjb25zdCBjZWxsT2Zmc2V0ID0gZSA9PiB7XG4gIHJldHVybiB7XG4gICAgeDogfn4oZS5vZmZzZXRYIC8gY2VsbFNpemUpLFxuICAgIHk6IH5+KGUub2Zmc2V0WSAvIGNlbGxTaXplKVxuICB9O1xufVxuXG5leHBvcnQgY29uc3QgcmVuZGVyID0gc3RhdGUgPT4ge1xuICBlcmFzZSgpO1xuICBzdGF0ZS5jZWxscy5mb3JFYWNoKGRyYXdDZWxsKTtcbiAgZHJhd1Njb3JlKHN0YXRlLnNjb3JlKTtcbn07XG5cbmNvbnRleHQuZm9udCA9ICcyNHB4IHNhbnMtc2VyaWYnO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvY2FudmFzLmpzXG4gKiovIiwiY29uc3QgZ3JpZCA9IFtdO1xuY29uc3Qgc2NvcmUgPSB7IGN1cnJlbnQ6IDAsIGJvbnVzOiAwIH07XG5cbmV4cG9ydCBjb25zdCBnYW1lID0geyBncmlkLCBzY29yZSB9O1xuXG5jb25zdCB3aWR0aCA9IDExO1xuY29uc3QgaGVpZ2h0ID0gMTI7XG5cbmNvbnN0IHBvaW50cyA9IChtYXRjaGVkKSA9PiBtYXRjaGVkLmxlbmd0aCAqIChtYXRjaGVkLmxlbmd0aCAtIDEpO1xuY29uc3QgcmFuZCA9IGIgPT4gfn4oTWF0aC5yYW5kb20oKSAqIGIpO1xuY29uc3Qgc2VsZiA9IGl0ZW0gPT4gaXRlbTtcblxuY29uc3QgaGFzUHJvcHMgPSBwcm9wcyA9PiBjZWxsID0+IE9iamVjdC5rZXlzKHByb3BzKS5ldmVyeSgocHJvcCkgPT4gY2VsbFtwcm9wXSA9PT0gcHJvcHNbcHJvcF0pO1xuY29uc3QgZmluZCA9IChsaXN0LCBwcm9wcykgPT4gbGlzdC5maW5kKGhhc1Byb3BzKHByb3BzKSk7XG5jb25zdCBmaWx0ZXIgPSBwcm9wcyA9PiBncmlkLmZpbHRlcihoYXNQcm9wcyhwcm9wcykpO1xuY29uc3QgY29tcGFjdCA9IGxpc3QgPT4gbGlzdC5maWx0ZXIoc2VsZik7XG5cbmNvbnN0IG1vdmVSaWdodCA9IGNlbGwgPT4gY2VsbC54ICs9IDE7XG5jb25zdCBtb3ZlRG93biA9IGNlbGwgPT4gY2VsbC55ICs9IDE7XG5jb25zdCBzcGFjZUJlbG93ID0gY2VsbCA9PiAhZmluZChncmlkLCB7eDogY2VsbC54LCB5OiBjZWxsLnkgKyAxfSk7XG5jb25zdCBtYXRjaCA9IGNlbGwgPT4gY2VsbC5tID0gdHJ1ZTtcbmNvbnN0IHVubWF0Y2ggPSBjZWxsID0+IGNlbGwubSA9IGZhbHNlO1xuY29uc3QgcmVtb3ZlID0gY2VsbCA9PiBncmlkLnNwbGljZShncmlkLmluZGV4T2YoY2VsbCksIDEpO1xuXG5jb25zdCBjb2x1bW4gPSB4ID0+IGZpbHRlcih7eH0pO1xuY29uc3Qgcm93ID0geSA9PiBmaWx0ZXIoe3l9KTtcblxuY29uc3QgcmFuZG9tQ2VsbCA9ICh4LCB5KSA9PiB7XG4gIGxldCBjID0gcmFuZCg1KSArIDEsIG1hdGNoZWQgPSBmYWxzZTtcbiAgcmV0dXJuIHt4LCB5LCBjLCBtYXRjaGVkfTtcbn07XG5cbmNvbnN0IGZhbGwgPSBjZWxsID0+IHtcbiAgd2hpbGUgKGNlbGwueSA8IGhlaWdodCAtIDEgJiYgc3BhY2VCZWxvdyhjZWxsKSkgbW92ZURvd24oY2VsbCk7XG59O1xuXG5jb25zdCBjb2xsYXBzZUNvbHVtbnMgPSAoKSA9PiB7XG4gIGZvciAobGV0IHggPSB3aWR0aCAtIDE7IHggPj0gMTsgeC0tKSB7XG4gICAgaWYgKGNvbHVtbih4KS5sZW5ndGgpIGNvbnRpbnVlO1xuXG4gICAgZm9yIChsZXQgeDIgPSB4IC0gMTsgeDIgPj0gMDsgeDItLSkge1xuICAgICAgY29sdW1uKHgyKS5mb3JFYWNoKG1vdmVSaWdodCk7XG4gICAgfVxuICB9XG59O1xuXG5jb25zdCBhcHBseUdyYXZpdHkgPSAoKSA9PiB7XG4gIGZvciAobGV0IHkgPSBoZWlnaHQgLSAxOyB5ID49IDA7IHktLSkge1xuICAgIHJvdyh5KS5mb3JFYWNoKGZhbGwpO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCBjbGljayA9IGNlbGwgPT4ge1xuICBsZXQgbWF0Y2hlZCA9IG1hdGNoQ2VsbHMoY2VsbCk7XG5cbiAgaWYgKG1hdGNoZWQubGVuZ3RoID49IDIpIHtcbiAgICBzY29yZS5jdXJyZW50ICs9IHBvaW50cyhtYXRjaGVkKTtcbiAgICBtYXRjaGVkLmZvckVhY2gocmVtb3ZlKTtcbiAgICBhcHBseUdyYXZpdHkoKTtcbiAgICBjb2xsYXBzZUNvbHVtbnMoKTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgbW92ZSA9IGNlbGwgPT4ge1xuICBncmlkLmZvckVhY2godW5tYXRjaCk7XG4gIGxldCBtYXRjaGVkID0gbWF0Y2hDZWxscyhjZWxsKTtcblxuICBpZiAobWF0Y2hlZC5sZW5ndGggPj0gMikge1xuICAgIG1hdGNoZWQuZm9yRWFjaChtYXRjaCk7XG4gICAgc2NvcmUuYm9udXMgPSBwb2ludHMobWF0Y2hlZCk7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGhhbmRsZSA9IChjb29yZHMsIGFjdGlvbikgPT4ge1xuICBjb25zdCBjZWxsID0gZmluZChncmlkLCBjb29yZHMpO1xuICBjZWxsICYmIGFjdGlvbihjZWxsKTtcbn1cblxuY29uc3QgbmVpZ2hib3VycyA9IGNlbGwgPT4ge1xuICBsZXQgY2VsbHMgPSBmaWx0ZXIoe2M6IGNlbGwuY30pO1xuXG4gIGxldCBuID0gW1xuICAgIGZpbmQoY2VsbHMsIHt4OiBjZWxsLngsIHk6IGNlbGwueSArIDF9KSxcbiAgICBmaW5kKGNlbGxzLCB7eDogY2VsbC54LCB5OiBjZWxsLnkgLSAxfSksXG4gICAgZmluZChjZWxscywge3g6IGNlbGwueCArIDEsIHk6IGNlbGwueX0pLFxuICAgIGZpbmQoY2VsbHMsIHt4OiBjZWxsLnggLSAxLCB5OiBjZWxsLnl9KVxuICBdO1xuXG4gIHJldHVybiBjb21wYWN0KG4pO1xufVxuXG5jb25zdCBtYXRjaENlbGxzID0gKGNlbGwsIGxpc3QgPSBbXSkgPT4ge1xuICBsaXN0LnB1c2goY2VsbCk7XG5cbiAgbmVpZ2hib3VycyhjZWxsKS5mb3JFYWNoKGZ1bmN0aW9uKGMpIHtcbiAgICBpZiAobGlzdC5pbmRleE9mKGMpID09PSAtMSkgbWF0Y2hDZWxscyhjLCBsaXN0KTtcbiAgfSk7XG5cbiAgcmV0dXJuIGxpc3Q7XG59O1xuXG5mb3IgKGxldCB5ID0gMDsgeSA8IGhlaWdodDsgeSsrKSB7XG4gIGZvciAobGV0IHggPSAwOyB4IDwgd2lkdGg7IHgrKykge1xuICAgIGdyaWQucHVzaChyYW5kb21DZWxsKHgsIHkpKTtcbiAgfVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvZ2FtZS5qc1xuICoqLyIsImNvbnN0IGRyYXdDZWxsID0gY2VsbCA9PiB7XG4gIHJldHVybiBjZWxsO1xufTtcblxuZXhwb3J0IGNvbnN0IGdhbWVUb0NhbnZhcyA9IChnYW1lKSA9PiB7XG4gIGxldCB7IGdyaWQsIHNjb3JlIH0gPSBnYW1lO1xuXG4gIHJldHVybiB7XG4gICAgY2VsbHM6IGdyaWQubWFwKGRyYXdDZWxsKSxcbiAgICBzY29yZTogYFNjb3JlOiAke3Njb3JlLmN1cnJlbnR9YCArIChzY29yZS5ib251cyA+IDAgPyBgICsgJHtzY29yZS5ib251c31gIDogJycpXG4gIH07XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy94LmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==